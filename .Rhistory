read.csv("activity.scv")
read.csv("activity.csv")
a <- read.csv("activity.csv")
str(csv)
str(a)
tapply(a$steps, a$date,sum)
dsum <- tapply(a$steps, a$date,sum)
dsum
hist(dsum)
str(dsum)
str(dsum$1)
dsum$1
dsum = aggregate(steps ~ date, a, sum)
str(dsum)
hist(dsum)
hist(dsum$steps)
hist(dsum$steps, 10, main="Total Steps Per Day", xlab="Number of Steps")
dsum
hist(dsum$steps, 10, main="Total Steps Per Day (10/2 - 11/29)", xlab="Number of Steps")
mean(dsum)
mean(dsum$steps)
median(dsum$steps)
isum = aggregate(steps ~ interval, a, sum)
isum
isum = aggregate(steps ~ interval, a, average)
isum = aggregate(steps ~ interval, a, avg)
isum = aggregate(steps ~ interval, a, mean)
isum
isum = aggregate(steps ~ interval, a, mean)
plot(isum$interval, isum$sateps, type = "l")
plot(isum$steps, isum$interval, type = "l")
plot(isum$interval, isum$steps, type = "l")
strptime(isum$interval, formate="$H%M")
strptime(isum$interval, format="$H%M")
strptime(isum$interval, format="%H%M")
strftime(isum$interval, format="%H%M")
strptime(isum$interval, format="%H%M")
?substring
substring(strptime(isum$interval, format="%H%M"), 12,16)
itimes = substring(strptime(isum$interval, format="%H%M"), 12,16)
plot(itimes, isum$steps, type = "l")
itimes
ism
isum
str(a)
strpad(a$interval, pad="0", 4)
str_pad(a$interval, pad="0", 4)
library(stringr)
str_pad(a$interval, pad="0", 4)
itimes = substring(strptime(str_pad(isum$interval, pad="0",4), format="%H%M"), 12,16)
itimes
plot(itimes, isum$steps, type = "l")
str(itimes)
str(isum$steps)
library(zoo)
library(xts
)
install.packages("xts")
pdata$intervals <- itimes
df<-data.frame()
df$intervals <- itimes
df <- data.frame(itimes, isum$steps)
df
plot(df)
plot(df, type = "l"
)
plot(df, type = "l)
plot(df, type = "l")
plot(df, type = "l")
plot(df, type = "l")
library(ggplot)
str(df)
ggplot(df, aes(x=itimes, y = isum.steps)) + geom_line()
library(ggplot2)
ggplot(df, aes(x=itimes, y = isum.steps)) + geom_line()
ggplot(df, aes(x=df$itimes, y = df$isum.steps)) + geom_line()
ggplot(df, aes(x=itimes, y = isum.steps, group = 1)) + geom_line()
isum
highest <- max(isum$steps)
highest
isum[,steps = highest]
isum[,steps == highest]
isum[,isum$steps == highest]
str(isum)
isum[,3]
isum[interval,3]
isum[isum$interval,3]
isum[isum$interval,7]
isum[isum$interval,isum$stepos == highest]
isum[isum$interval,isum$steps == highest]
subset?
()
?subset
max = subset(isum, steps == highest)
max
nrow (isum)
nrow (subset(isum,is.na(steps)))
nrow (subset(a,is.na(steps)))
nrow(a)
a[is.na(steps)]
a
str(a)
a[is.na(steps),]
a[is.na("steps"),]
a
subset(a,is.na(steps))
a[is.na(a$steps),]
for (row in a[is.na(a$steps),])
)
for (row in a[is.na(a$steps),])
avg = subset(isum,interval == row$interval)
for (row in a[is.na(a$steps),])
row
for (row in a[is.na(a$steps),]) {}
for (row in a[is.na(a$steps),]) { row}
for (row in a[is.na(a$steps),]) { row$steps}
for (row in a[is.na(a$steps),]) {
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row, isum$interval]
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,a2$interval]
iavg = isum[isum$interval == i, isum$steps]
a2[row, steps] <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"inteveral"]
iavg = isum[isum$interval == i, isum$steps]
a2[row, steps] <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"inteveral"]
iavg = isum[isum$interval == i, "steps"]
a2[row, "steps"] <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"inteveral"]
iavg = isum[isum$interval == i, "steps"]
a2[row, "steps"] <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"inteveral"]
iavg = isum[isum$interval == i, "steps"]
a2[row, "steps"] <- 1
}
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"inteveral"]
iavg = isum[isum$interval == i, "steps"]
a2[row,]$steps <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,]$steps <- iavg
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,]$steps <- 1
}
a2 <- a
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,]$steps <- iavg
}
i <- a2[1, "interval"]
i
head(a2)
a2[6,"interval"]
row = 6
i <- a2[row,"interval"]
i
head (isum)
iavg = isum[isum$interval == i, "steps"]
iavg
a2[row,]$steps <- iavg
head(a2)
for (row in a2[is.na(a2$steps),]) {
row
}
for (row in a2[is.na(a2$steps),]) {
print(r)
}
for (row in a2[is.na(a2$steps),]) {
print(row)
}
print(row$steps)
}
for (row in a2[is.na(a2$steps),]) {
str(row)
}
for (row in a2[is.na(a2$steps),]) {
print(row[1])
}
?apply
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,]$steps <- iavg
}
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,a2$steps] <- iavg
}
debugSource('~/R/RepData_PeerAssessment1/Project 1.R')
for (row in a2[is.na(a2$steps),]) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,a2$steps] <- iavg
}
for (row in a2[is.na(a2$steps),]) {
print(row)
}
for (row in nrow(a2)) {
print(row)
}
for (row in nrow(a2)) {
if (is.na(a2[row,a2$steps]) {
print(row)
}
for (row in nrow(a2)) {
if (is.na(a2[row,a2$steps])) {
print(row)
}
}
for (row in nrow(a2)) {
if (is.na(a2[row,a2$steps]) == TRUE) {
print(row)
}
}
for (row in nrow(a2)) {
if (is.na(a2[row,]$steps) == TRUE) {
print(row)
}
}
for (row in nrow(a2)) {
print (row)
if (is.na(a2[row,]$steps) == TRUE) {
print("NA")
}
}
?merge
for (row in nrow(a2)) {
print(row)
}
for (row in 1:nrow(a2)) {
print(row)
}
for (row in 1:nrow(a2)) {
if (is.na(a2[row,]$steps) == TRUE) {
print("NA")
}
}
for (row in 1:nrow(a2)) {
if (is.na(a2[row,]$steps) == TRUE) {
print(row)
}
}
for (row in 1:nrow(a2)) {
if (is.na(a2[row,]$steps) == TRUE) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,a2$steps] <- iavg
}
}
row = 17565
i <- a2[row,"interval"]
i
iavg = isum[isum$interval == i, "steps"]
iavg
a2[row,"steps"] <- iavg
a2[row]
a2[row,]
for (row in 1:nrow(a2)) {
if (is.na(a2[row,]$steps) == TRUE) {
i <- a2[row,"interval"]
iavg = isum[isum$interval == i, "steps"]
a2[row,"steps"] <- iavg
}
}
a2[12959,]
dsum = aggregate(steps ~ date, a2, sum)
hist(dsum$steps, 10, main="Total Steps Per Day (10/2 - 11/29)", xlab="Number of Steps")
mean(dsum$steps)
median(dsum$steps)
dsum = aggregate(steps ~ date, a, sum)
hist(dsum$steps, 10, main="Total Steps Per Day (10/2 - 11/29)", xlab="Number of Steps")
mean(dsum$steps)
median(dsum$steps)
?weekday
?weekdays
str(a)
weekdays()
at = a[1:10,]
at
weekdays(at)
weekdays(at$date)
weekdays(at[1,"date"])
weekdays(at$date)
weekdays(as.date(at$date)
)
weekdays(as.Date(at$date))
a2$day.of.week= weekdays(as.Date(a$date))
a2
a2$day.type = "weekday"
a2
a2[day.of.week in c("Saturday", "Sunday"),]$day.type = "weekend"
a2[day.of.week %in% c("Saturday", "Sunday"),]$day.type = "weekend"
a2[a2$day.of.week %in% c("Saturday", "Sunday"),]$day.type = "weekend"
a2
isum = aggregate(steps ~ day.type+interval, a, mean)
isum = aggregate(steps ~ day.type+interval, a2, mean)
isum
?attach
day.f<-factor(a2$day.of.week,levels=c("Saturday", "Sunday", "Monday","Tuesday","Wednedsay","Thursday","Friday"),
labels=c("Weekend", "Weekend","Weekday","Weekday","Weekday","Weekday","Weekday"))
xyplot(interval, steps|day.type)
library(lattice)
isum = aggregate(steps ~ day.type+interval, a2, mean)
attach(isum)
xyplot(interval, steps|day.type)
library(lattice)
isum = aggregate(steps ~ day.type+interval, a2, mean)
attach(isum)
xyplot(interval, steps|day.type)
xyplot(interval~steps|day.type)
xyplot(steps~interval|day.type)
xyplot(steps~interval|day.type, type="l",xlab = "Interval", ylab="Steps")
xyplot(steps~interval|day.type, type="l",xlab = "Interval", ylab="Steps",main="Steps by Interval and Day Type")
xyplot(steps~interval|day.type, type="l",xlab = "Interval", ylab="Steps",main="Steps by Interval and Day Type", layout=c(1,2))
highest = max(isum$steps)
max = subset(isum, steps == highest)
max$interval
dsum
a2
summary(a2$steps)
summary(a$steps)
